const express = require('express');
const cors = require('cors'); // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: bodyParser –±—ã–ª –æ—à–∏–±–æ—á–Ω–æ —É–∫–∞–∑–∞–Ω –∑–¥–µ—Å—å
const bodyParser = require('body-parser');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const { body, validationResult } = require('express-validator');
const nodemailer = require('nodemailer');
const path = require('path');
const fs = require('fs').promises;
require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
app.use(helmet({
    contentSecurityPolicy: {
        directives: {
            defaultSrc: ["'self'"],
            // –†–∞–∑—Ä–µ—à–∞–µ–º 'unsafe-eval' –¥–ª—è Vue.js –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            // –†–∞–∑—Ä–µ—à–∞–µ–º CDN –¥–ª—è TailwindCSS, Unpkg (–¥–ª—è Vue, Firebase) –∏ Gstatic (–¥–ª—è Firebase)
            scriptSrc: ["'self'", "'unsafe-inline'", "'unsafe-eval'", "https://unpkg.com", "https://cdn.tailwindcss.com", "https://www.gstatic.com"],
            // –†–∞–∑—Ä–µ—à–∞–µ–º CDN –¥–ª—è TailwindCSS –∏ Google Fonts
            styleSrc: ["'self'", "'unsafe-inline'", "https://cdn.tailwindcss.com", "https://fonts.googleapis.com"],
            // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —à—Ä–∏—Ñ—Ç–æ–≤ –∏–∑ data: URI –∏ —Å Google Fonts
            fontSrc: ["'self'", "data:", "https://fonts.gstatic.com"],
            // –†–∞–∑—Ä–µ—à–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ data: URI –∏ —Å placehold.co
            imgSrc: ["'self'", "data:", "https://placehold.co"],
            // –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API Firebase –∏ Google API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
            connectSrc: [
                "'self'",
                "https://generativelanguage.googleapis.com", // –î–ª—è Gemini API
                "https://*.firebaseio.com",
                "https://*.googleapis.com",
                "https://securetoken.googleapis.com",
                "https://identitytoolkit.googleapis.com" // –í–∞–∂–Ω–æ –¥–ª—è Firebase Auth
            ],
            objectSrc: ["'none'"], // –ó–∞–ø—Ä–µ—â–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã (Flash, Java –∏ —Ç.–¥.)
            upgradeInsecureRequests: [], // –ü—Ä–æ—Å–∏–º –±—Ä–∞—É–∑–µ—Ä—ã –æ–±–Ω–æ–≤–ª—è—Ç—å HTTP-–∑–∞–ø—Ä–æ—Å—ã –¥–æ HTTPS
        },
    },
}));

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.use(cors({
    origin: process.env.FRONTEND_URL || 'http://localhost:3000',
    credentials: true
}));

// –ü–∞—Ä—Å–∏–Ω–≥ JSON –∏ URL-encoded –¥–∞–Ω–Ω—ã—Ö
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ 'public'
app.use(express.static(path.join(__dirname, 'public')));

// Rate limiting - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 5, // –ú–∞–∫—Å–∏–º—É–º 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ IP –∑–∞ 15 –º–∏–Ω—É—Ç
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    },
    standardHeaders: true, // –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset
    legacyHeaders: false, // –û—Ç–∫–ª—é—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ X-RateLimit-Reset
});

// –ü—Ä–∏–º–µ–Ω—è–µ–º rate limiting —Ç–æ–ª—å–∫–æ –∫ –º–∞—Ä—à—Ä—É—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
app.use('/api/submit-form', limiter);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nodemailer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const transporter = nodemailer.createTransport({
    host: process.env.EMAIL_HOST,
    port: process.env.EMAIL_PORT,
    secure: process.env.EMAIL_SECURE === 'true', // secure: true –¥–ª—è –ø–æ—Ä—Ç–∞ 465, secure: false –¥–ª—è –ø–æ—Ä—Ç–∞ 587 (STARTTLS)
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
    },
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Email-—Å–µ—Ä–≤–µ—Ä—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
transporter.verify((error, success) => {
    if (error) {
        console.error('üìß –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Email:', error);
    } else {
        console.log('üìß Email –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ‚úÖ –î–∞');
    }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç–¥–∞—á–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
app.get('/api/firebase-config', (req, res) => {
    const firebaseConfig = {
        apiKey: process.env.FIREBASE_API_KEY,
        authDomain: process.env.FIREBASE_AUTH_DOMAIN,
        projectId: process.env.FIREBASE_PROJECT_ID,
        storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
        messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
        appId: process.env.FIREBASE_APP_ID,
        measurementId: process.env.FIREBASE_MEASUREMENT_ID
    };
    // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    const filteredConfig = Object.fromEntries(
        Object.entries(firebaseConfig).filter(([_, v]) => v != null && v !== '')
    );
    res.json(filteredConfig);
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
app.post(
    '/api/submit-form',
    [
        // –ü—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
        body('name').trim().notEmpty().withMessage('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º').isLength({ min: 2 }).withMessage('–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤'),
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∑–∞—Ç–µ–º –ø—Ä–∏–º–µ–Ω—è–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
        body('phone')
            .trim()
            .notEmpty().withMessage('–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')
            .customSanitizer(value => value.replace(/[\s\-\(\)]/g, '')) // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, —Å–∫–æ–±–∫–∏
            .matches(/^\+?\d{10,15}$/).withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞'), // –¢–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–µ–º 10-15 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
        body('email').trim().notEmpty().withMessage('Email –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º').isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'),
        body('task').trim().notEmpty().withMessage('–ó–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π').isLength({ min: 10 }).withMessage('–ó–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤'),
        body('company').trim(), // –ü–æ–ª–µ "–ö–æ–º–ø–∞–Ω–∏—è" –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        body('promo').trim(), // –ü–æ–ª–µ "–ü—Ä–æ–º–æ–∫–æ–¥" –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    ],
    async (req, res) => {
        const errors = validationResult(req); // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        if (!errors.isEmpty()) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
            return res.status(400).json({ success: false, message: '–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', errors: errors.array() });
        }

        const formData = req.body; // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
        const dataFile = path.join(__dirname, 'data', 'submissions.json'); // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫

        try {
            // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é 'data', –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            await fs.mkdir(path.dirname(dataFile), { recursive: true });

            let submissions = [];
            // –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏
            try {
                const data = await fs.readFile(dataFile, 'utf8');
                submissions = JSON.parse(data); // –ü–∞—Ä—Å–∏–º JSON
            } catch (readError) {
                // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç/–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
                if (readError.code === 'ENOENT' || readError instanceof SyntaxError) {
                    submissions = [];
                } else {
                    throw readError; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
                }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –æ—Ç–º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
            const newSubmission = {
                ...formData,
                timestamp: new Date().toISOString()
            };
            submissions.push(newSubmission);

            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∑–∞—è–≤–æ–∫ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
            await fs.writeFile(dataFile, JSON.stringify(submissions, null, 2), 'utf8');

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Email
            const mailOptions = {
                from: process.env.EMAIL_FROM, // –û—Ç –∫–æ–≥–æ
                to: process.env.RECIPIENT_EMAIL, // –ö–æ–º—É
                subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ "–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏"', // –¢–µ–º–∞ –ø–∏—Å—å–º–∞
                html: `
                    <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!</h2>
                    <p><b>–ò–º—è:</b> ${formData.name}</p>
                    <p><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}</p>
                    <p><b>Email:</b> ${formData.email}</p>
                    <p><b>–ö–æ–º–ø–∞–Ω–∏—è:</b> ${formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><b>–ó–∞–¥–∞—á–∞:</b> ${formData.task}</p>
                    <p><b>–ü—Ä–æ–º–æ–∫–æ–¥:</b> ${formData.promo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}</p>
                `,
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Email
            await transporter.sendMail(mailOptions);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
            res.status(200).json({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã:', error);
            res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.' });
        }
    }
);

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–µ—Å–ª–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)
app.get('/api/stats', async (req, res) => {
    try {
        const dataFile = path.join(__dirname, 'data', 'submissions.json');

        let submissions = [];
        try {
            const data = await fs.readFile(dataFile, 'utf8');
            submissions = JSON.parse(data);
        } catch (readError) {
            if (readError.code === 'ENOENT') {
                return res.json({ total: 0, today: 0, thisWeek: 0 });
            } else {
                throw readError;
            }
        }

        const stats = {
            total: submissions.length,
            today: submissions.filter(s => {
                const today = new Date().toDateString();
                const submissionDate = new Date(s.timestamp).toDateString();
                return today === submissionDate;
            }).length,
            thisWeek: submissions.filter(s => {
                const weekAgo = new Date();
                weekAgo.setDate(weekAgo.getDate() - 7);
                return new Date(s.timestamp) > weekAgo;
            }).length
        };

        res.json(stats);
    } catch (error) {
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–æ–∫ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)
app.use((req, res) => {
    res.status(404).json({ error: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
    console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üìÇ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã: http://localhost:${PORT}`);
});
