import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import { body, validationResult } from 'express-validator';
import nodemailer from 'nodemailer';
import path from 'path';
import admin from 'firebase-admin';
import { fileURLToPath } from 'url';
import 'dotenv/config';

// 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º multer
import multer from 'multer';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º multer –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É 'uploads'
const upload = multer({ dest: 'uploads/' });

const requiredEnv = [
    'PORT', 'EMAIL_HOST', 'EMAIL_PORT', 'EMAIL_SECURE', 'EMAIL_USER', 'EMAIL_PASS', 'EMAIL_RECEIVER',
    'FIREBASE_PROJECT_ID', 'GOOGLE_APPLICATION_CREDENTIALS'
];
for (const envVar of requiredEnv) {
    if (!process.env[envVar]) {
        console.error(`\x1b[31m–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ${envVar} –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ .env.\x1b[0m`);
        process.exit(1);
    }
}

try {
    admin.initializeApp({
        credential: admin.credential.applicationDefault(),
        projectId: process.env.FIREBASE_PROJECT_ID,
    });
    console.log('\x1b[32m‚úÖ Firebase Admin SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.\x1b[0m');
} catch (error) {
    console.error('\x1b[31m--- –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase Admin SDK ---', error);
    process.exit(1);
}
const db = admin.firestore();

const app = express();
const PORT = process.env.PORT;

const transporter = nodemailer.createTransport({
    host: process.env.EMAIL_HOST,
    port: parseInt(process.env.EMAIL_PORT, 10),
    secure: process.env.EMAIL_SECURE === 'true',
    auth: { user: process.env.EMAIL_USER, pass: process.env.EMAIL_PASS },
});

transporter.verify((error) => {
    if (error) {
        console.error('\x1b[31m--- –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nodemailer ---', error);
    } else {
        console.log('\x1b[32m‚úÖ Nodemailer –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å–µ–º.\x1b[0m');
    }
});

app.use(helmet());
// –ú—ã –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π bodyParser.json(), —Ç–∞–∫ –∫–∞–∫ multer –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
// app.use(bodyParser.json()); 
app.use(cors());
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000,
    max: 100,
});
app.use('/api/', limiter);

app.use(express.static(path.join(__dirname, 'dist')));

// 3. –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–æ—É—Ç–∞, –¥–æ–±–∞–≤–ª—è—è middleware –æ—Ç multer
app.post(
    '/api/submit-form',
    upload.single('file'), // 'file' - —ç—Ç–æ –∏–º—è –ø–æ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —É–∫–∞–∑–∞–ª–∏ –≤ FormData –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    [
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        body('name').trim().notEmpty().withMessage('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'),
        body('phone').trim().notEmpty().withMessage('–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'),
        body('email').trim().isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'),
        body('task').trim().notEmpty().withMessage('–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')
    ],
    async (req, res) => {
        const errors = validationResult(req);
        if (!errors.isEmpty()) {
            return res.status(400).json({ success: false, message: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', errors: errors.array() });
        }

        // –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è —Ç–µ–ø–µ—Ä—å –≤ req.body, –∞ —Ñ–∞–π–ª –≤ req.file
        const { name, phone, email, company, task, promo } = req.body;
        const file = req.file;

        const newSubmission = { 
            name, phone, email, 
            company: company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞', 
            task, 
            promo: promo || '–ù–µ —É–∫–∞–∑–∞–Ω', 
            timestamp: admin.firestore.FieldValue.serverTimestamp(), 
            ip: req.ip, 
            userAgent: req.headers['user-agent'],
            fileName: file ? file.originalname : '–ù–µ—Ç —Ñ–∞–π–ª–∞'
        };
        
        try {
            // 4. –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø–∏—Å—å–º–æ
            const mailOptions = {
                from: `"–§–æ—Ä–º–∞ —Å —Å–∞–π—Ç–∞ RedPanda" <${process.env.EMAIL_USER}>`,
                to: process.env.EMAIL_RECEIVER,
                subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –æ—Ç ${name}`,
                html: `<div style="font-family: Arial, sans-serif; line-height: 1.6;"><h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏</h2><p><strong>–ò–º—è:</strong> ${name}</p><p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p><p><strong>Email:</strong> ${email}</p><p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${newSubmission.company}</p><p><strong>–ü—Ä–æ–º–æ–∫–æ–¥:</strong> ${newSubmission.promo}</p><hr><h3>–ó–∞–¥–∞—á–∞:</h3><p>${task}</p></div>`,
                attachments: [] // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏–π
            };

            if (file) {
                mailOptions.attachments.push({
                    filename: file.originalname,
                    path: file.path
                });
            }

            await transporter.sendMail(mailOptions);
            console.log(`–ü–∏—Å—å–º–æ —Å –∑–∞—è–≤–∫–æ–π –æ—Ç ${name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`);

            const docRef = await db.collection('submissions').add(newSubmission);
            console.log(`–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Firestore —Å ID: ${docRef.id}`);
            
            res.status(200).json({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
        } catch (error) {
            console.error('\x1b[31m=====================================');
            console.error('      –û–®–ò–ë–ö–ê –ü–†–ò –û–ë–†–ê–ë–û–¢–ö–ï –ó–ê–Ø–í–ö–ò');
            console.error('=====================================\x1b[0m');
            console.error('–í—Ä–µ–º—è:', new Date().toISOString());
            console.error('–ü–æ–ª–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
            res.status(500).json({ success: false, message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–º. –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞.' });
        }
    }
);

app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'dist', 'index.html'));
});

app.listen(PORT, () => {
    console.log(`\x1b[36müöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –ø–æ –∞–¥—Ä–µ—Å—É http://localhost:${PORT}\x1b[0m`);
});